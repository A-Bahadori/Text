// ... (کد قبلی بدون تغییر تا ReferenceWriter)

public sealed class ReferenceWriter : IReferenceWriter
{
    private const string OutputFolderName = "Project Reference Mapper";
    private readonly string _baseOutputPath;
    private readonly ILogger<ReferenceWriter> _logger;

    public ReferenceWriter(ILogger<ReferenceWriter> logger)
    {
        _logger = logger;
        _baseOutputPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, OutputFolderName);
        EnsureOutputDirectoryExists();
    }

    private void EnsureOutputDirectoryExists()
    {
        if (!Directory.Exists(_baseOutputPath))
        {
            Directory.CreateDirectory(_baseOutputPath);
            _logger.LogInformation("پوشه خروجی ایجاد شد: {Path}", _baseOutputPath);
        }
    }

    public async Task WriteReferencesAsync(ProjectInfo projectInfo)
    {
        var timestamp = DateTime.Now.ToString("yyyy-MM-dd HH-mm-ss");
        var outputFileName = $"{projectInfo.ProjectName}_References_{timestamp}.txt";
        var outputPath = Path.Combine(_baseOutputPath, outputFileName);

        var content = new List<string>
        {
            "ProjectReferenceMapper - گزارش رفرنس‌ها",
            $"تاریخ ایجاد: {DateTime.Now}",
            $"نام پروژه: {projectInfo.ProjectName}",
            $"نوع پروژه: {(projectInfo.IsSdkStyle ? "SDK-Style" : "Legacy")}",
            $"مسیر پروژه: {projectInfo.ProjectPath}",
            "----------------------------------------",
            string.Empty,
            "لیست رفرنس‌ها:",
            string.Empty
        };

        content.AddRange(projectInfo.References.Select(FormatReference));

        await File.WriteAllLinesAsync(outputPath, content);
        _logger.LogInformation("فایل خروجی ایجاد شد: {Path}", outputPath);
    }

    private static string FormatReference(ReferenceInfo reference) => reference.Type switch
    {
        ReferenceType.Package => $"Package: {reference.Name} - Version: {reference.Version}",
        ReferenceType.Project => $"Project: {reference.Path}",
        ReferenceType.Assembly => $"Assembly: {reference.Name}",
        _ => throw new ArgumentException($"نوع رفرنس نامعتبر: {reference.Type}")
    };
}

// ... (بقیه کد بدون تغییر)

// در انتهای فایل، بعد از اتمام آنالیز:
var outputPath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "Project Reference Mapper");
Console.WriteLine($"\nفایل‌های خروجی در مسیر زیر ایجاد شدند:");
Console.WriteLine(outputPath);
Console.WriteLine("\nPress any key to exit...");
Console.ReadKey();
