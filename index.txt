public static class AsposeHelper
{
    private static bool _isLicenseSet = false;
    private static readonly object _lockObject = new object();

    public static void SetLicense()
    {
        if (_isLicenseSet) return;

        lock (_lockObject)
        {
            if (_isLicenseSet) return;

            try
            {
                var wordLicense = new Aspose.Words.License();
                
                // اولویت اول: فایل خارجی
                string licensePath = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, 
                    "Licenses", "Aspose.Total.NET.lic");
                
                if (File.Exists(licensePath))
                {
                    wordLicense.SetLicense(licensePath);
                    _isLicenseSet = true;
                    return;
                }

                // اولویت دوم: Embedded Resource
                if (TrySetLicenseFromEmbeddedResource(wordLicense))
                {
                    _isLicenseSet = true;
                    return;
                }

                // اگر هیچکدام یافت نشد
                throw new FileNotFoundException("Aspose license file not found in external path or embedded resources");
            }
            catch (Exception ex)
            {
                throw new InvalidOperationException($"Failed to set Aspose license: {ex.Message}", ex);
            }
        }
    }

    private static bool TrySetLicenseFromEmbeddedResource(Aspose.Words.License license)
    {
        try
        {
            var assembly = Assembly.GetExecutingAssembly();
            var resourceNames = assembly.GetManifestResourceNames();
            
            // جستجو برای فایل لایسنس در منابع
            var licenseResourceName = resourceNames.FirstOrDefault(r => r.EndsWith("Aspose.Total.NET.lic"));
            
            if (licenseResourceName != null)
            {
                using var stream = assembly.GetManifestResourceStream(licenseResourceName);
                if (stream != null)
                {
                    license.SetLicense(stream);
                    return true;
                }
            }
            
            return false;
        }
        catch
        {
            return false;
        }
    }
}
