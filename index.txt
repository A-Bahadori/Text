Directory.GetFiles(@"C:\YourProjectPath", "*.csproj", SearchOption.AllDirectories)
    .Select(file => new { ProjectFile = file, Doc = XDocument.Load(file) })
    .Where(x => x.Doc.Descendants().Any(d => (d.Name.LocalName is "Reference" or "PackageReference" or "FrameworkReference") 
        && (d.Attribute("Include")?.Value?.Contains("Windows.Forms", StringComparison.OrdinalIgnoreCase) ?? false)))
	.Select(x => $"\nپروژه {Path.GetFileNameWithoutExtension(x.ProjectFile)}:\nمسیر: {x.ProjectFile}")
	.Dump();



Directory.GetFiles(@"C:\YourProjectPath", "*.csproj", SearchOption.AllDirectories)
   // بررسی هر فایل پروژه
   .Where(file => XDocument.Load(file)
	   // جستجوی رفرنس‌های Windows.Forms
	   .Descendants()
	   .Any(element =>
		   (element.Name.LocalName == "Reference" || element.Name.LocalName == "PackageReference") &&
		   element.Attribute("Include")?.Value?.Contains("Windows.Forms") == true
	   ))
   // نمایش اطلاعات پروژه‌های WinForms
   .Select(file => $"نام پروژه: {Path.GetFileNameWithoutExtension(file)}\nمسیر: {file}")
   .Dump();


Directory.GetFiles(@"C:\YourProjectPath", "*.csproj", SearchOption.AllDirectories)
   // بررسی هر فایل پروژه
   .Select(file => new 
   { 
       ProjectFile = file,
       References = XDocument.Load(file)
           .Descendants()
           .Where(x => (x.Name.LocalName == "Reference" || x.Name.LocalName == "PackageReference") 
               && x.Attribute("Include")?.Value?.Contains("Windows.Forms") == true)
           .Select(x => x.Attribute("Include").Value)
           .ToList()
   })
   .Where(x => x.References.Any())
   // نمایش اطلاعات پروژه‌ها و رفرنس‌های آنها
   .Select(x => 
       $"نام پروژه: {Path.GetFileNameWithoutExtension(x.ProjectFile)}\n" +
       $"مسیر: {x.ProjectFile}\n" +
       $"رفرنس‌ها:\n{string.Join("\n", x.References.Select(r => $"- {r}"))}\n")
   .Dump();
