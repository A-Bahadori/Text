using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using System.Runtime.InteropServices; // برای استفاده از توابع API ویندوز

namespace Emoji2
{
    public partial class MainForm : Form
    {
        // برای ایجاد گوشه‌های گرد در پنل پاپ‌آپ
        [DllImport("Gdi32.dll", EntryPoint = "CreateRoundRectRgn")]
        private static extern IntPtr CreateRoundRectRgn
        (
            int nLeftRect,
            int nTopRect,
            int nRightRect,
            int nBottomRect,
            int nWidthEllipse,
            int nHeightEllipse
        );

        private TextBox txtMessage;
        private Button btnEmoji;
        private Panel emojiPanel;
        private TabControl tabEmojiCategories;
        private TextBox txtSearch;
        private FlowLayoutPanel favoriteEmojisPanel;
        private List<string> favoriteEmojis;
        
        // دیکشنری برای دسته‌بندی اموجی‌ها
        private Dictionary<string, List<string>> emojiCategories;

        // برای ذخیره موقعیت پنل پاپ‌آپ
        private Point emojiPanelLocation;

        public MainForm()
        {
            InitializeComponent();
            InitializeEmojiCategories();
            LoadFavoriteEmojis();
            SetupControls();
            
            // اضافه کردن کلید میانبر (Ctrl+E) برای نمایش/مخفی کردن پنل اموجی
            this.KeyPreview = true;
            this.KeyDown += MainForm_KeyDown;
        }

        private void MainForm_KeyDown(object sender, KeyEventArgs e)
        {
            // میانبر Ctrl+E برای نمایش/مخفی کردن پنل اموجی
            if (e.Control && e.KeyCode == Keys.E)
            {
                e.SuppressKeyPress = true;
                emojiPanel.Visible = !emojiPanel.Visible;
                if (emojiPanel.Visible)
                    txtSearch.Focus();
            }
        }

        private void InitializeEmojiCategories()
        {
            // ایجاد دسته‌بندی‌های مختلف اموجی
            emojiCategories = new Dictionary<string, List<string>>();
            
            // دسته احساسات و صورت‌ها
            emojiCategories["احساسات"] = new List<string>()
            {
                "😀", "😁", "😂", "🤣", "😃", "😄", "😅", "😆",
                "😉", "😊", "😋", "😎", "😍", "😘", "🥰", "😗",
                "😙", "😚", "🙂", "🤗", "🤩", "🤔", "🤨", "😐",
                "😑", "😶", "🙄", "😏", "😣", "😥", "😮", "🤐",
                "😯", "😪", "😫", "🥱", "😴", "😌", "😛", "😜",
                "😝", "🤤", "😒", "😓", "😔", "😕", "🙃", "🤑",
                "😲", "☹️", "🙁", "😖", "😞", "😟", "😤", "😢",
                "😭", "😦", "😧", "😨", "😩", "🤯", "😬", "😰"
            };
            
            // دسته حیوانات
            emojiCategories["حیوانات"] = new List<string>()
            {
                "🐶", "🐱", "🐭", "🐹", "🐰", "🦊", "🐻", "🐼",
                "🐨", "🐯", "🦁", "🐮", "🐷", "🐸", "🐵", "🐔",
                "🐧", "🐦", "🐤", "🦆", "🦅", "🦉", "🦇", "🐺",
                "🐗", "🐴", "🦄", "🐝", "🐛", "🦋", "🐌", "🐞",
                "🐜", "🦟", "🦗", "🕷️", "🦂", "🐢", "🐍", "🦎",
                "🦖", "🦕", "🐙", "🦑", "🦐", "🦞", "🦀", "🐡",
                "🐠", "🐟", "🐬", "🐳", "🐋", "🦈", "🐊", "🐅"
            };
            
            // دسته غذاها
            emojiCategories["غذاها"] = new List<string>()
            {
                "🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇",
                "🍓", "🍈", "🍒", "🍑", "🥭", "🍍", "🥥", "🥝",
                "🍅", "🍆", "🥑", "🥦", "🥬", "🥒", "🌶️", "🌽",
                "🥕", "🧄", "🧅", "🥔", "🍠", "🥐", "🥯", "🍞",
                "🥖", "🥨", "🧀", "🥚", "🍳", "🧈", "🥞", "🧇",
                "🥓", "🥩", "🍗", "🍖", "🌭", "🍔", "🍟", "🍕",
                "🥪", "🥙", "🧆", "🌮", "🌯", "🥗", "🥘", "🥫"
            };
            
            // دسته علائم و نمادها
            emojiCategories["نمادها"] = new List<string>()
            {
                "❤️", "🧡", "💛", "💚", "💙", "💜", "🖤", "🤍",
                "🤎", "💔", "❣️", "💕", "💞", "💓", "💗", "💖",
                "💘", "💝", "💟", "☮️", "✝️", "☪️", "🕉️", "☸️",
                "✡️", "🔯", "🕎", "☯️", "☦️", "🛐", "⛎", "♈",
                "♉", "♊", "♋", "♌", "♍", "♎", "♏", "♐",
                "♑", "♒", "♓", "🆔", "⚛️", "🉑", "☢️", "☣️",
                "📴", "📳", "🈶", "🈚", "🈸", "🈺", "🈷️", "✴️"
            };
            
            // دسته اشیاء
            emojiCategories["اشیاء"] = new List<string>()
            {
                "⌚", "📱", "💻", "⌨️", "🖥️", "🖨️", "🖱️", "🖲️",
                "💽", "💾", "💿", "📀", "📼", "📷", "📸", "📹",
                "🎥", "📽️", "🎞️", "📞", "☎️", "📟", "📠", "📺",
                "📻", "🎙️", "🎚️", "🎛️", "🧭", "⏱️", "⏲️", "⏰",
                "🕰️", "⌛", "⏳", "📡", "🔋", "🔌", "💡", "🔦",
                "🕯️", "🧯", "🛢️", "💸", "💵", "💴", "💶", "💷",
                "💰", "💳", "💎", "⚖️", "🧰", "🔧", "🔨", "⚒️"
            };
            
            // اموجی‌های پرکاربرد اولیه
            favoriteEmojis = new List<string>() { "👍", "👋", "❤️", "😂", "🙏", "👏", "🔥", "🎉" };
        }

        private void LoadFavoriteEmojis()
        {
            try
            {
                // بررسی وجود فایل ذخیره‌سازی
                string filePath = System.IO.Path.Combine(Application.StartupPath, "favorite_emojis.txt");
                if (System.IO.File.Exists(filePath))
                {
                    // خواندن ایموجی‌های پرکاربرد از فایل
                    string[] emojis = System.IO.File.ReadAllLines(filePath);
                    favoriteEmojis = new List<string>(emojis);
                }
                else
                {
                    // اگر فایل وجود نداشت، از لیست پیش‌فرض استفاده می‌کنیم
                    favoriteEmojis = new List<string>() { "👍", "👋", "❤️", "😂", "🙏", "👏", "🔥", "🎉" };
                }
            }
            catch (Exception ex)
            {
                // در صورت بروز خطا، از لیست پیش‌فرض استفاده می‌کنیم
                favoriteEmojis = new List<string>() { "👍", "👋", "❤️", "😂", "🙏", "👏", "🔥", "🎉" };
                MessageBox.Show("خطا در بارگذاری ایموجی‌های پرکاربرد: " + ex.Message, "خطا", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void SaveFavoriteEmoji(string emoji)
        {
            // اضافه کردن به لیست پرکاربردها اگر قبلاً وجود نداشته باشد
            if (!favoriteEmojis.Contains(emoji))
            {
                favoriteEmojis.Add(emoji);
                // محدود کردن تعداد اموجی‌های پرکاربرد به 20 مورد
                if (favoriteEmojis.Count > 20)
                    favoriteEmojis.RemoveAt(0);
                
                // بروزرسانی پنل اموجی‌های پرکاربرد
                UpdateFavoriteEmojisPanel();
                
                // ذخیره‌سازی لیست به‌روز شده در فایل
                SaveFavoritesToFile();
            }
        }

        private void SetupControls()
        {
            // تنظیم فرم اصلی
            this.Text = "پیام‌رسان با انتخابگر اموجی پیشرفته";
            this.Size = new Size(600, 550);
            this.StartPosition = FormStartPosition.CenterScreen;
            this.RightToLeft = RightToLeft.Yes; // برای پشتیبانی از زبان فارسی
            
            // ایجاد TextBox برای نوشتن پیام
            txtMessage = new TextBox
            {
                Multiline = true,
                Location = new Point(10, 10),
                Size = new Size(500, 100),
                Font = new Font("Segoe UI", 12),
                RightToLeft = RightToLeft.Yes,
                ScrollBars = ScrollBars.Vertical
            };
            this.Controls.Add(txtMessage);
            
            // ایجاد دکمه برای نمایش پنل اموجی
            btnEmoji = new Button
            {
                Text = "😊",
                Location = new Point(520, 10),
                Size = new Size(50, 50),
                Font = new Font("Segoe UI", 16)
            };
            
            // اضافه کردن تولتیپ به دکمه اموجی
            ToolTip emojiButtonTooltip = new ToolTip();
            emojiButtonTooltip.SetToolTip(btnEmoji, "نمایش اموجی‌ها (Ctrl+E)");
            btnEmoji.Click += BtnEmoji_Click;
            this.Controls.Add(btnEmoji);
            
            // ایجاد پنل اصلی برای نمایش اموجی‌ها به صورت پاپ‌آپ
            emojiPanel = new Panel
            {
                Size = new Size(560, 350),
                BorderStyle = BorderStyle.None,
                Visible = false,
                BackColor = Color.White,
                AutoScroll = true // اضافه کردن قابلیت اسکرول خودکار
            };
            
            // اضافه کردن سایه و گوشه‌های گرد به پنل
            emojiPanel.Paint += (s, e) => {
                // ایجاد سایه و حاشیه
                Rectangle rect = new Rectangle(0, 0, emojiPanel.Width - 1, emojiPanel.Height - 1);
                using (GraphicsPath path = new GraphicsPath())
                {
                    int radius = 10;
                    path.AddArc(rect.X, rect.Y, radius, radius, 180, 90);
                    path.AddArc(rect.Right - radius, rect.Y, radius, radius, 270, 90);
                    path.AddArc(rect.Right - radius, rect.Bottom - radius, radius, radius, 0, 90);
                    path.AddArc(rect.X, rect.Bottom - radius, radius, radius, 90, 90);
                    path.CloseAllFigures();
                    
                    e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;
                    using (Pen pen = new Pen(Color.FromArgb(180, 180, 180), 1))
                    {
                        e.Graphics.DrawPath(pen, path);
                    }
                    
                    // اضافه کردن سایه نرم
                    for (int i = 1; i <= 5; i++)
                    {
                        using (Pen shadowPen = new Pen(Color.FromArgb(20, 0, 0, 0), 1))
                        {
                            e.Graphics.DrawRectangle(shadowPen, rect.X - i, rect.Y - i, rect.Width + i * 2, rect.Height + i * 2);
                        }
                    }
                }
            };
            
            // تنظیم ناحیه گرد برای پنل
            emojiPanel.Region = System.Drawing.Region.FromHrgn(CreateRoundRectRgn(0, 0, emojiPanel.Width, emojiPanel.Height, 10, 10));
            
            // اضافه کردن قابلیت تغییر اندازه به پنل
            emojiPanel.Resize += (s, e) => {
                // تنظیم مجدد موقعیت کنترل‌ها بر اساس اندازه جدید پنل
                if (txtSearch != null) txtSearch.Width = emojiPanel.Width - 20;
                if (favoriteEmojisPanel != null) favoriteEmojisPanel.Width = emojiPanel.Width - 20;
                if (tabEmojiCategories != null) {
                    tabEmojiCategories.Width = emojiPanel.Width - 20;
                    tabEmojiCategories.Height = emojiPanel.Height - tabEmojiCategories.Top - 10;
                }
            };
            
            // تنظیمات برای حالت پاپ‌آپ
            emojiPanel.Paint += (s, e) => {
                e.Graphics.DrawRectangle(new Pen(Color.Gray, 1), 0, 0, emojiPanel.Width - 1, emojiPanel.Height - 1);
            };
            
            // اضافه کردن سایه به پنل
            emojiPanel.Region = System.Drawing.Region.FromHrgn(CreateRoundRectRgn(0, 0, emojiPanel.Width, emojiPanel.Height, 10, 10));
            this.Controls.Add(emojiPanel);
            
            // اضافه کردن دکمه بستن به پنل پاپ‌آپ
            Button btnClosePanel = new Button
            {
                Text = "×",
                Size = new Size(25, 25),
                Location = new Point(emojiPanel.Width - 30, 5),
                FlatStyle = FlatStyle.Flat,
                Font = new Font("Arial", 12, FontStyle.Bold),
                ForeColor = Color.Red,
                BackColor = Color.White,
                Cursor = Cursors.Hand
            };
            btnClosePanel.FlatAppearance.BorderSize = 0;
            btnClosePanel.Click += (s, e) => emojiPanel.Visible = false;
            emojiPanel.Controls.Add(btnClosePanel);
            
            // ایجاد کادر جستجو برای اموجی‌ها
            txtSearch = new TextBox
            {
                Location = new Point(10, 10),
                Size = new Size(540, 25),
                Font = new Font("Segoe UI", 10)
            };
            // اضافه کردن متن راهنما (Placeholder) با استفاده از رویداد
            txtSearch.Text = "جستجوی اموجی...";
            txtSearch.ForeColor = Color.Gray;
            txtSearch.GotFocus += (s, e) => 
            {
                if (txtSearch.Text == "جستجوی اموجی...")
                {
                    txtSearch.Text = "";
                    txtSearch.ForeColor = Color.Black;
                }
            };
            txtSearch.LostFocus += (s, e) => 
            {
                if (string.IsNullOrWhiteSpace(txtSearch.Text))
                {
                    txtSearch.Text = "جستجوی اموجی...";
                    txtSearch.ForeColor = Color.Gray;
                }
            };
            txtSearch.TextChanged += TxtSearch_TextChanged;
            emojiPanel.Controls.Add(txtSearch);
            
            // ایجاد پنل برای اموجی‌های پرکاربرد
            favoriteEmojisPanel = new FlowLayoutPanel
            {
                Location = new Point(10, 45),
                Size = new Size(540, 50),
                BorderStyle = BorderStyle.FixedSingle,
                FlowDirection = FlowDirection.LeftToRight
            };
            emojiPanel.Controls.Add(favoriteEmojisPanel);
            UpdateFavoriteEmojisPanel();
            
            // ایجاد تب کنترل برای دسته‌بندی‌ها
            tabEmojiCategories = new TabControl
            {
                Location = new Point(10, 105),
                Size = new Size(540, 235),
                Font = new Font("Segoe UI", 9)
            };
            emojiPanel.Controls.Add(tabEmojiCategories);
            
            // ایجاد تب‌ها و اضافه کردن اموجی‌ها به هر دسته
            foreach (var category in emojiCategories)
            {
                TabPage tabPage = new TabPage(category.Key);
                tabPage.RightToLeft = RightToLeft.Yes;
                
                FlowLayoutPanel flowPanel = new FlowLayoutPanel
                {
                    Dock = DockStyle.Fill,
                    AutoScroll = true,
                    FlowDirection = FlowDirection.RightToLeft
                };
                
                // اضافه کردن دکمه‌های اموجی به پنل
                foreach (var emoji in category.Value)
                {
                    Button btnEmoji = CreateEmojiButton(emoji);
                    flowPanel.Controls.Add(btnEmoji);
                }
                
                tabPage.Controls.Add(flowPanel);
                tabEmojiCategories.TabPages.Add(tabPage);
            }
        }

        private Button CreateEmojiButton(string emoji)
        {
            Button btnEmoji = new Button
            {
                Text = emoji,
                Size = new Size(40, 40),
                Margin = new Padding(3),
                Font = new Font("Segoe UI", 12),
                FlatStyle = FlatStyle.Flat,
                UseVisualStyleBackColor = true
            };
            
            // اضافه کردن منوی راست کلیک برای اضافه کردن به پرکاربردها
            ContextMenuStrip contextMenu = new ContextMenuStrip();
            ToolStripMenuItem addToFavoritesItem = new ToolStripMenuItem("افزودن به پرکاربردها");
            addToFavoritesItem.Click += (sender, e) => 
            {
                SaveFavoriteEmoji(emoji);
            };
            contextMenu.Items.Add(addToFavoritesItem);
            btnEmoji.ContextMenuStrip = contextMenu;
            
            btnEmoji.Click += (sender, e) => 
            {
                // اضافه کردن اموجی انتخاب شده به موقعیت فعلی کرسر
                int cursorPosition = txtMessage.SelectionStart;
                txtMessage.Text = txtMessage.Text.Insert(cursorPosition, emoji);
                txtMessage.SelectionStart = cursorPosition + emoji.Length;
                
                // اضافه کردن به لیست پرکاربردها
                SaveFavoriteEmoji(emoji);
                
                // تمرکز دوباره روی TextBox
                txtMessage.Focus();
            };
            
            return btnEmoji;
        }

        private void UpdateFavoriteEmojisPanel()
        {
            favoriteEmojisPanel.Controls.Clear();
            
            // اضافه کردن برچسب عنوان
            Label lblTitle = new Label
            {
                Text = "پرکاربردها:",
                AutoSize = true,
                Margin = new Padding(3, 10, 3, 10),
                Font = new Font("Segoe UI", 9)
            };
            favoriteEmojisPanel.Controls.Add(lblTitle);
            
            // اضافه کردن دکمه‌های اموجی پرکاربرد
            foreach (var emoji in favoriteEmojis)
            {
                Button btnEmoji = new Button
                {
                    Text = emoji,
                    Size = new Size(35, 35),
                    Margin = new Padding(2),
                    Font = new Font("Segoe UI", 12),
                    FlatStyle = FlatStyle.Flat,
                    UseVisualStyleBackColor = true
                };
                
                btnEmoji.Click += (sender, e) => 
                {
                    // اضافه کردن اموجی انتخاب شده به موقعیت فعلی کرسر
                    int cursorPosition = txtMessage.SelectionStart;
                    txtMessage.Text = txtMessage.Text.Insert(cursorPosition, emoji);
                    txtMessage.SelectionStart = cursorPosition + emoji.Length;
                    
                    // تمرکز دوباره روی TextBox
                    txtMessage.Focus();
                };
                
                // اضافه کردن منوی راست کلیک برای حذف از پرکاربردها
                ContextMenuStrip contextMenu = new ContextMenuStrip();
                ToolStripMenuItem removeFromFavoritesItem = new ToolStripMenuItem("حذف از پرکاربردها");
                removeFromFavoritesItem.Click += (sender, e) => 
                {
                    RemoveFavoriteEmoji(emoji);
                };
                contextMenu.Items.Add(removeFromFavoritesItem);
                btnEmoji.ContextMenuStrip = contextMenu;
                
                favoriteEmojisPanel.Controls.Add(btnEmoji);
            }
        }

        // متد جدید برای حذف ایموجی از پرکاربردها
        private void RemoveFavoriteEmoji(string emoji)
        {
            if (favoriteEmojis.Contains(emoji))
            {
                favoriteEmojis.Remove(emoji);
                UpdateFavoriteEmojisPanel();
                
                // ذخیره‌سازی لیست به‌روز شده در فایل
                SaveFavoritesToFile();
            }
        }
        
        // متد جدید برای ذخیره‌سازی ایموجی‌های پرکاربرد در فایل
        private void SaveFavoritesToFile()
        {
            try
            {
                string filePath = System.IO.Path.Combine(Application.StartupPath, "favorite_emojis.txt");
                System.IO.File.WriteAllLines(filePath, favoriteEmojis.ToArray());
            }
            catch (Exception ex)
            {
                MessageBox.Show("خطا در ذخیره‌سازی ایموجی‌های پرکاربرد: " + ex.Message, "خطا", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void TxtSearch_TextChanged(object sender, EventArgs e)
        {
            string searchText = txtSearch.Text.Trim().ToLower();
            
            // اگر متن جستجو همان متن راهنما باشد، آن را نادیده بگیر
            if (searchText == "جستجوی اموجی..." || searchText.ToLower() == "جستجوی اموجی..." || string.IsNullOrWhiteSpace(searchText))
            {
                // حذف تب نتایج جستجو اگر وجود داشته باشد
                for (int i = 0; i < tabEmojiCategories.TabPages.Count; i++)
                {
                    if (tabEmojiCategories.TabPages[i].Text == "نتایج جستجو")
                    {
                        tabEmojiCategories.TabPages.RemoveAt(i);
                        break;
                    }
                }
                return;
            }
            
            // ایجاد تب موقت برای نتایج جستجو
            TabPage searchResultTab = null;
            
            foreach (TabPage tab in tabEmojiCategories.TabPages)
            {
                if (tab.Text == "نتایج جستجو")
                {
                    searchResultTab = tab;
                    searchResultTab.Controls.Clear();
                    break;
                }
            }
            
            if (searchResultTab == null)
            {
                searchResultTab = new TabPage("نتایج جستجو");
                tabEmojiCategories.TabPages.Add(searchResultTab);
            }
            
            FlowLayoutPanel flowPanel = new FlowLayoutPanel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                FlowDirection = FlowDirection.RightToLeft
            };
            
            // دیکشنری برای نگهداری توضیحات اموجی‌ها (برای بهبود جستجو)
            Dictionary<string, string> emojiDescriptions = new Dictionary<string, string>()
            {
                // احساسات
                { "😀", "خنده لبخند شادی خوشحالی" },
                { "😁", "خنده لبخند شادی خوشحالی دندان" },
                { "😂", "خنده اشک شادی خوشحالی" },
                { "🤣", "خنده غش اشک شادی خوشحالی" },
                { "😃", "خنده لبخند شادی خوشحالی دهان باز" },
                { "😄", "خنده لبخند شادی خوشحالی دهان باز دندان" },
                { "😅", "خنده لبخند شادی خوشحالی عرق" },
                { "😆", "خنده لبخند شادی خوشحالی چشم بسته" },
                { "😉", "چشمک لبخند" },
                { "😊", "لبخند شادی خوشحالی چشم" },
                { "😋", "لبخند غذا خوشمزه زبان" },
                { "😎", "باحال عینک خفن" },
                { "😍", "عشق قلب چشم محبت" },
                { "😘", "بوس عشق قلب محبت" },
                { "🥰", "عشق قلب محبت" },
                
                // حیوانات
                { "🐶", "سگ حیوان" },
                { "🐱", "گربه حیوان" },
                { "🐭", "موش حیوان" },
                { "🐹", "همستر حیوان" },
                { "🐰", "خرگوش حیوان" },
                { "🦊", "روباه حیوان" },
                { "🐻", "خرس حیوان" },
                { "🐼", "پاندا حیوان" },
                
                // غذاها
                { "🍏", "سیب میوه غذا" },
                { "🍎", "سیب قرمز میوه غذا" },
                { "🍐", "گلابی میوه غذا" },
                { "🍊", "پرتقال نارنگی میوه غذا" },
                { "🍋", "لیمو میوه غذا" },
                { "🍌", "موز میوه غذا" },
                
                // نمادها
                { "❤️", "قلب عشق محبت قرمز" },
                { "🧡", "قلب عشق محبت نارنجی" },
                { "💛", "قلب عشق محبت زرد" },
                { "💚", "قلب عشق محبت سبز" },
                { "💙", "قلب عشق محبت آبی" },
                
                // اشیاء
                { "⌚", "ساعت زمان" },
                { "📱", "موبایل تلفن گوشی" },
                { "💻", "لپتاپ کامپیوتر" },
                { "⌨️", "کیبورد" },
                { "🖥️", "کامپیوتر مانیتور" }
            };
            
            // جستجو در همه دسته‌بندی‌ها
            List<string> searchResults = new List<string>();
            foreach (var category in emojiCategories)
            {
                // بهبود جستجو - جستجو در نام دسته‌بندی و اموجی‌ها
                if (category.Key.ToLower().Contains(searchText))
                {
                    // اضافه کردن همه اموجی‌های دسته‌بندی به نتایج
                    searchResults.AddRange(category.Value);
                }
                else
                {
                    // جستجو در اموجی‌های هر دسته‌بندی
                    foreach (var emoji in category.Value)
                    {
                        // جستجو در خود اموجی
                        if (emoji.Contains(searchText))
                        {
                            searchResults.Add(emoji);
                        }
                        // جستجو در توضیحات اموجی
                        else if (emojiDescriptions.ContainsKey(emoji) && 
                                 emojiDescriptions[emoji].ToLower().Contains(searchText))
                        {
                            searchResults.Add(emoji);
                        }
                    }
                }
            }
            
            // حذف موارد تکراری
            searchResults = searchResults.Distinct().ToList();
            
            // اضافه کردن نتایج جستجو به پنل
            if (searchResults.Count > 0)
            {
                // اضافه کردن برچسب تعداد نتایج
                Label lblResultCount = new Label
                {
                    Text = $"{searchResults.Count} نتیجه برای '{searchText}'",
                    Dock = DockStyle.Top,
                    TextAlign = ContentAlignment.MiddleCenter,
                    Font = new Font("Segoe UI", 9, FontStyle.Bold),
                    ForeColor = Color.DarkBlue,
                    Padding = new Padding(0, 5, 0, 5)
                };
                flowPanel.Controls.Add(lblResultCount);
                
                foreach (var emoji in searchResults)
                {
                    Button btnEmoji = CreateEmojiButton(emoji);
                    flowPanel.Controls.Add(btnEmoji);
                }
            }
            else
            {
                // نمایش پیام عدم وجود نتیجه
                Label lblNoResult = new Label
                {
                    Text = $"هیچ نتیجه‌ای برای '{searchText}' یافت نشد",
                    Dock = DockStyle.Fill,
                    TextAlign = ContentAlignment.MiddleCenter,
                    Font = new Font("Segoe UI", 10),
                    ForeColor = Color.Gray
                };
                flowPanel.Controls.Add(lblNoResult);
            }
            
            searchResultTab.Controls.Add(flowPanel);
            tabEmojiCategories.SelectedTab = searchResultTab;
        }

        private void BtnEmoji_Click(object sender, EventArgs e)
        {
            // تنظیم موقعیت پنل پاپ‌آپ نسبت به دکمه اموجی
            emojiPanelLocation = btnEmoji.PointToScreen(Point.Empty);
            emojiPanelLocation.Y += btnEmoji.Height + 5;
            emojiPanelLocation = this.PointToClient(emojiPanelLocation);
            
            // تنظیم موقعیت پنل
            emojiPanel.Location = emojiPanelLocation;
            
            // اضافه کردن افکت نمایش پنل
            if (!emojiPanel.Visible)
            {
                // نمایش پنل با افکت
                emojiPanel.Opacity = 0;
                emojiPanel.Visible = true;
                
                // استفاده از تایمر برای ایجاد افکت فید این
                Timer fadeTimer = new Timer();
                fadeTimer.Interval = 10;
                double opacity = 0;
                
                fadeTimer.Tick += (s, args) => {
                    opacity += 0.1;
                    if (opacity >= 1)
                    {
                        emojiPanel.Opacity = 1;
                        fadeTimer.Stop();
                        fadeTimer.Dispose();
                    }
                    else
                    {
                        emojiPanel.Opacity = opacity;
                    }
                };
                
                fadeTimer.Start();
                txtSearch.Focus();
            }
            else
            {
                // مخفی کردن پنل
                emojiPanel.Visible = false;
            }
        }
        
        // اضافه کردن رویداد کلیک خارج از پنل برای بستن پنل پاپ‌آپ
        protected override void OnClick(EventArgs e)
        {
            base.OnClick(e);
            if (emojiPanel.Visible && !emojiPanel.Bounds.Contains(this.PointToClient(Cursor.Position)))
            {
                emojiPanel.Visible = false;
            }
        }
    }
}
