using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace EmojiSelectorApp
{
    public partial class MainForm : Form
    {
        private TextBox txtMessage;
        private Button btnEmoji;
        private EmojiPopupForm emojiPopup;
        private List<string> favoriteEmojis;
        private Dictionary<string, List<string>> emojiCategories;
        private const string FAVORITES_FILE = "favorites.txt";
        
        // دیکشنری برای دسته‌بندی اموجی‌ها
        private Dictionary<string, List<string>> emojiCategories;

        public MainForm()
        {
            InitializeComponent();
            InitializeEmojiCategories();
            LoadFavoriteEmojis();
            SetupControls();
            
            // اضافه کردن کلید میانبر (Ctrl+E) برای نمایش/مخفی کردن پنل اموجی
            this.KeyPreview = true;
            this.KeyDown += MainForm_KeyDown;
        }

        private void MainForm_KeyDown(object sender, KeyEventArgs e)
        {
            // میانبر Ctrl+E برای نمایش/مخفی کردن پنل اموجی
            if (e.Control && e.KeyCode == Keys.E)
            {
                e.SuppressKeyPress = true;
                ToggleEmojiPopup();
            }
        }

        private void ToggleEmojiPopup()
        {
            if (emojiPopup == null || emojiPopup.IsDisposed)
            {
                emojiPopup = new EmojiPopupForm(this);
                emojiPopup.EmojiSelected += OnEmojiSelected;
                emojiPopup.FavoriteEmojisChanged += OnFavoriteEmojisChanged;
            }

            if (!emojiPopup.Visible)
            {
                Point popupLocation = new Point(
                    btnEmoji.PointToScreen(new Point(0, btnEmoji.Height)).X,
                    btnEmoji.PointToScreen(new Point(0, btnEmoji.Height)).Y
                );
                emojiPopup.Location = popupLocation;
                emojiPopup.Show();
            }
            else
            {
                emojiPopup.Hide();
            }
        }

        private void OnEmojiSelected(string emoji)
        {
            int cursorPosition = txtMessage.SelectionStart;
            txtMessage.Text = txtMessage.Text.Insert(cursorPosition, emoji);
            txtMessage.SelectionStart = cursorPosition + emoji.Length;
            txtMessage.Focus();
        }

        private void OnFavoriteEmojisChanged(List<string> newFavorites)
        {
            favoriteEmojis = newFavorites;
            SaveFavoriteEmojis();
        }

        private void LoadFavoriteEmojis()
        {
            try
            {
                if (System.IO.File.Exists(FAVORITES_FILE))
                {
                    favoriteEmojis = System.IO.File.ReadAllLines(FAVORITES_FILE).ToList();
                }
                else
                {
                    favoriteEmojis = new List<string>() { "👍", "👋", "❤️", "😂", "🙏", "👏", "🔥", "🎉" };
                }
            }
            catch
            {
                favoriteEmojis = new List<string>() { "👍", "👋", "❤️", "😂", "🙏", "👏", "🔥", "🎉" };
            }
        }

        private void SaveFavoriteEmojis()
        {
            try
            {
                System.IO.File.WriteAllLines(FAVORITES_FILE, favoriteEmojis);
            }
            catch
            {
                // Handle save error silently
            }
        }

        private void InitializeEmojiCategories()
        {
            // ایجاد دسته‌بندی‌های مختلف اموجی
            emojiCategories = new Dictionary<string, List<string>>();
            
            // دسته احساسات و صورت‌ها
            emojiCategories["احساسات"] = new List<string>()
            {
                "😀", "😁", "😂", "🤣", "😃", "😄", "😅", "😆",
                "😉", "😊", "😋", "😎", "😍", "😘", "🥰", "😗",
                "😙", "😚", "🙂", "🤗", "🤩", "🤔", "🤨", "😐",
                "😑", "😶", "🙄", "😏", "😣", "😥", "😮", "🤐",
                "😯", "😪", "😫", "🥱", "😴", "😌", "😛", "😜",
                "😝", "🤤", "😒", "😓", "😔", "😕", "🙃", "🤑",
                "😲", "☹️", "🙁", "😖", "😞", "😟", "😤", "😢",
                "😭", "😦", "😧", "😨", "😩", "🤯", "😬", "😰"
            };
            
            // دسته حیوانات
            emojiCategories["حیوانات"] = new List<string>()
            {
                "🐶", "🐱", "🐭", "🐹", "🐰", "🦊", "🐻", "🐼",
                "🐨", "🐯", "🦁", "🐮", "🐷", "🐸", "🐵", "🐔",
                "🐧", "🐦", "🐤", "🦆", "🦅", "🦉", "🦇", "🐺",
                "🐗", "🐴", "🦄", "🐝", "🐛", "🦋", "🐌", "🐞",
                "🐜", "🦟", "🦗", "🕷️", "🦂", "🐢", "🐍", "🦎",
                "🦖", "🦕", "🐙", "🦑", "🦐", "🦞", "🦀", "🐡",
                "🐠", "🐟", "🐬", "🐳", "🐋", "🦈", "🐊", "🐅"
            };
            
            // دسته غذاها
            emojiCategories["غذاها"] = new List<string>()
            {
                "🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇",
                "🍓", "🍈", "🍒", "🍑", "🥭", "🍍", "🥥", "🥝",
                "🍅", "🍆", "🥑", "🥦", "🥬", "🥒", "🌶️", "🌽",
                "🥕", "🧄", "🧅", "🥔", "🍠", "🥐", "🥯", "🍞",
                "🥖", "🥨", "🧀", "🥚", "🍳", "🧈", "🥞", "🧇",
                "🥓", "🥩", "🍗", "🍖", "🌭", "🍔", "🍟", "🍕",
                "🥪", "🥙", "🧆", "🌮", "🌯", "🥗", "🥘", "🥫"
            };
            
            // دسته علائم و نمادها
            emojiCategories["نمادها"] = new List<string>()
            {
                "❤️", "🧡", "💛", "💚", "💙", "💜", "🖤", "🤍",
                "🤎", "💔", "❣️", "💕", "💞", "💓", "💗", "💖",
                "💘", "💝", "💟", "☮️", "✝️", "☪️", "🕉️", "☸️",
                "✡️", "🔯", "🕎", "☯️", "☦️", "🛐", "⛎", "♈",
                "♉", "♊", "♋", "♌", "♍", "♎", "♏", "♐",
                "♑", "♒", "♓", "🆔", "⚛️", "🉑", "☢️", "☣️",
                "📴", "📳", "🈶", "🈚", "🈸", "🈺", "🈷️", "✴️"
            };
            
            // دسته اشیاء
            emojiCategories["اشیاء"] = new List<string>()
            {
                "⌚", "📱", "💻", "⌨️", "🖥️", "🖨️", "🖱️", "🖲️",
                "💽", "💾", "💿", "📀", "📼", "📷", "📸", "📹",
                "🎥", "📽️", "🎞️", "📞", "☎️", "📟", "📠", "📺",
                "📻", "🎙️", "🎚️", "🎛️", "🧭", "⏱️", "⏲️", "⏰",
                "🕰️", "⌛", "⏳", "📡", "🔋", "🔌", "💡", "🔦",
                "🕯️", "🧯", "🛢️", "💸", "💵", "💴", "💶", "💷",
                "💰", "💳", "💎", "⚖️", "🧰", "🔧", "🔨", "⚒️"
            };
            
            // اموجی‌های پرکاربرد اولیه
            favoriteEmojis = new List<string>() { "👍", "👋", "❤️", "😂", "🙏", "👏", "🔥", "🎉" };
        }

        private void SetupControls()
        {
            // تنظیم فرم اصلی
            this.Text = "پیام‌رسان با انتخابگر اموجی پیشرفته";
            this.Size = new Size(600, 550);
            this.StartPosition = FormStartPosition.CenterScreen;
            this.RightToLeft = RightToLeft.Yes; // برای پشتیبانی از زبان فارسی
            
            // ایجاد TextBox برای نوشتن پیام
            txtMessage = new TextBox
            {
                Multiline = true,
                Location = new Point(10, 10),
                Size = new Size(500, 100),
                Font = new Font("Segoe UI", 12),
                RightToLeft = RightToLeft.Yes,
                ScrollBars = ScrollBars.Vertical
            };
            this.Controls.Add(txtMessage);
            
            // ایجاد دکمه برای نمایش پنل اموجی
            btnEmoji = new Button
            {
                Text = "😊",
                Location = new Point(520, 10),
                Size = new Size(50, 50),
                Font = new Font("Segoe UI", 16)
            };
            
            // اضافه کردن تولتیپ به دکمه اموجی
            ToolTip emojiButtonTooltip = new ToolTip();
            emojiButtonTooltip.SetToolTip(btnEmoji, "نمایش اموجی‌ها (Ctrl+E)");
            btnEmoji.Click += (s, e) => ToggleEmojiPopup();
            this.Controls.Add(btnEmoji);
        }

        [STAThread]
        static void Main()
        {
            Application.EnableVisualStyles();
            Application.SetCompatibleTextRenderingDefault(false);
            Application.Run(new MainForm());
        }
    }

    public class EmojiPopupForm : Form
    {
        private TextBox txtSearch;
        private TabControl tabEmojiCategories;
        private FlowLayoutPanel favoriteEmojisPanel;
        private List<string> favoriteEmojis;
        private Dictionary<string, List<string>> emojiCategories;
        private MainForm parentForm;

        public event Action<string> EmojiSelected;
        public event Action<List<string>> FavoriteEmojisChanged;

        public EmojiPopupForm(MainForm parent)
        {
            parentForm = parent;
            InitializePopup();
            InitializeEmojiCategories();
            LoadFavoriteEmojis();
            SetupControls();
        }

        private void InitializePopup()
        {
            this.FormBorderStyle = FormBorderStyle.None;
            this.Size = new Size(400, 500);
            this.ShowInTaskbar = false;
            this.TopMost = true;
            this.StartPosition = FormStartPosition.Manual;
            this.RightToLeft = RightToLeft.Yes;
            this.BackColor = Color.White;
            this.Paint += (s, e) => 
            {
                e.Graphics.DrawRectangle(new Pen(Color.LightGray), 0, 0, Width - 1, Height - 1);
            };
        }

        private void LoadFavoriteEmojis()
        {
            favoriteEmojis = parentForm.favoriteEmojis;
        }

        private void InitializeEmojiCategories()
        {
            emojiCategories = new Dictionary<string, List<string>>();
            
            // دسته احساسات و صورت‌ها
            emojiCategories["احساسات"] = new List<string>()
            {
                "😀", "😁", "😂", "🤣", "😃", "😄", "😅", "😆",
                "😉", "😊", "😋", "😎", "😍", "😘", "🥰", "😗",
                "😙", "😚", "🙂", "🤗", "🤩", "🤔", "🤨", "😐",
                "😑", "😶", "🙄", "😏", "😣", "😥", "😮", "🤐",
                "😯", "😪", "😫", "🥱", "😴", "😌", "😛", "😜",
                "😝", "🤤", "😒", "😓", "😔", "😕", "🙃", "🤑",
                "😲", "☹️", "🙁", "😖", "😞", "😟", "😤", "😢",
                "😭", "😦", "😧", "😨", "😩", "🤯", "😬", "😰"
            };
            
            // دسته حیوانات
            emojiCategories["حیوانات"] = new List<string>()
            {
                "🐶", "🐱", "🐭", "🐹", "🐰", "🦊", "🐻", "🐼",
                "🐨", "🐯", "🦁", "🐮", "🐷", "🐸", "🐵", "🐔",
                "🐧", "🐦", "🐤", "🦆", "🦅", "🦉", "🦇", "🐺",
                "🐗", "🐴", "🦄", "🐝", "🐛", "🦋", "🐌", "🐞",
                "🐜", "🦟", "🦗", "🕷️", "🦂", "🐢", "🐍", "🦎",
                "🦖", "🦕", "🐙", "🦑", "🦐", "🦞", "🦀", "🐡",
                "🐠", "🐟", "🐬", "🐳", "🐋", "🦈", "🐊", "🐅"
            };
            
            // دسته غذاها
            emojiCategories["غذاها"] = new List<string>()
            {
                "🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇",
                "🍓", "🍈", "🍒", "🍑", "🥭", "🍍", "🥥", "🥝",
                "🍅", "🍆", "🥑", "🥦", "🥬", "🥒", "🌶️", "🌽",
                "🥕", "🧄", "🧅", "🥔", "🍠", "🥐", "🥯", "🍞",
                "🥖", "🥨", "🧀", "🥚", "🍳", "🧈", "🥞", "🧇",
                "🥓", "🥩", "🍗", "🍖", "🌭", "🍔", "🍟", "🍕",
                "🥪", "🥙", "🧆", "🌮", "🌯", "🥗", "🥘", "🥫"
            };
            
            // دسته علائم و نمادها
            emojiCategories["نمادها"] = new List<string>()
            {
                "❤️", "🧡", "💛", "💚", "💙", "💜", "🖤", "🤍",
                "🤎", "💔", "❣️", "💕", "💞", "💓", "💗", "💖",
                "💘", "💝", "💟", "☮️", "✝️", "☪️", "🕉️", "☸️",
                "✡️", "🔯", "🕎", "☯️", "☦️", "🛐", "⛎", "♈",
                "♉", "♊", "♋", "♌", "♍", "♎", "♏", "♐",
                "♑", "♒", "♓", "🆔", "⚛️", "🉑", "☢️", "☣️",
                "📴", "📳", "🈶", "🈚", "🈸", "🈺", "🈷️", "✴️"
            };
            
            // دسته اشیاء
            emojiCategories["اشیاء"] = new List<string>()
            {
                "⌚", "📱", "💻", "⌨️", "🖥️", "🖨️", "🖱️", "🖲️",
                "💽", "💾", "💿", "📀", "📼", "📷", "📸", "📹",
                "🎥", "📽️", "🎞️", "📞", "☎️", "📟", "📠", "📺",
                "📻", "🎙️", "🎚️", "🎛️", "🧭", "⏱️", "⏲️", "⏰",
                "🕰️", "⌛", "⏳", "📡", "🔋", "🔌", "💡", "🔦",
                "🕯️", "🧯", "🛢️", "💸", "💵", "💴", "💶", "💷",
                "💰", "💳", "💎", "⚖️", "🧰", "🔧", "🔨", "⚒️"
            };
        }

        private void SetupControls()
        {
            // Search TextBox
            txtSearch = new TextBox
            {
                Location = new Point(10, 10),
                Size = new Size(380, 25),
                Font = new Font("Segoe UI", 10),
                PlaceholderText = "جستجوی اموجی..."
            };
            txtSearch.TextChanged += TxtSearch_TextChanged;
            this.Controls.Add(txtSearch);

            // Favorites Panel
            favoriteEmojisPanel = new FlowLayoutPanel
            {
                Location = new Point(10, 45),
                Size = new Size(380, 50),
                BorderStyle = BorderStyle.FixedSingle,
                FlowDirection = FlowDirection.RightToLeft
            };
            this.Controls.Add(favoriteEmojisPanel);
            UpdateFavoriteEmojisPanel();

            // Tab Control
            tabEmojiCategories = new TabControl
            {
                Location = new Point(10, 105),
                Size = new Size(380, 385),
                Font = new Font("Segoe UI", 9)
            };
            this.Controls.Add(tabEmojiCategories);

            // Create tabs for each category
            foreach (var category in emojiCategories)
            {
                TabPage tabPage = new TabPage(category.Key);
                tabPage.RightToLeft = RightToLeft.Yes;

                FlowLayoutPanel flowPanel = new FlowLayoutPanel
                {
                    Dock = DockStyle.Fill,
                    AutoScroll = true,
                    FlowDirection = FlowDirection.RightToLeft
                };

                foreach (var emoji in category.Value)
                {
                    Button btnEmoji = CreateEmojiButton(emoji);
                    flowPanel.Controls.Add(btnEmoji);
                }

                tabPage.Controls.Add(flowPanel);
                tabEmojiCategories.TabPages.Add(tabPage);
            }

            // Add close button
            Button btnClose = new Button
            {
                Text = "×",
                Size = new Size(25, 25),
                Location = new Point(365, 5),
                FlatStyle = FlatStyle.Flat,
                Font = new Font("Segoe UI", 12, FontStyle.Bold)
            };
            btnClose.Click += (s, e) => this.Hide();
            this.Controls.Add(btnClose);
        }

        private Button CreateEmojiButton(string emoji)
        {
            Button btnEmoji = new Button
            {
                Text = emoji,
                Size = new Size(40, 40),
                Margin = new Padding(3),
                Font = new Font("Segoe UI", 12),
                FlatStyle = FlatStyle.Flat,
                UseVisualStyleBackColor = true
            };

            ContextMenuStrip contextMenu = new ContextMenuStrip();
            ToolStripMenuItem addToFavoritesItem = new ToolStripMenuItem("افزودن به پرکاربردها");
            addToFavoritesItem.Click += (sender, e) => AddToFavorites(emoji);
            contextMenu.Items.Add(addToFavoritesItem);

            if (favoriteEmojis.Contains(emoji))
            {
                ToolStripMenuItem removeFromFavoritesItem = new ToolStripMenuItem("حذف از پرکاربردها");
                removeFromFavoritesItem.Click += (sender, e) => RemoveFromFavorites(emoji);
                contextMenu.Items.Add(removeFromFavoritesItem);
            }

            btnEmoji.ContextMenuStrip = contextMenu;
            btnEmoji.Click += (sender, e) => EmojiSelected?.Invoke(emoji);

            return btnEmoji;
        }

        private void AddToFavorites(string emoji)
        {
            if (!favoriteEmojis.Contains(emoji))
            {
                favoriteEmojis.Add(emoji);
                if (favoriteEmojis.Count > 20)
                    favoriteEmojis.RemoveAt(0);
                UpdateFavoriteEmojisPanel();
                FavoriteEmojisChanged?.Invoke(favoriteEmojis);
            }
        }

        private void RemoveFromFavorites(string emoji)
        {
            if (favoriteEmojis.Contains(emoji))
            {
                favoriteEmojis.Remove(emoji);
                UpdateFavoriteEmojisPanel();
                FavoriteEmojisChanged?.Invoke(favoriteEmojis);
            }
        }

        private void UpdateFavoriteEmojisPanel()
        {
            favoriteEmojisPanel.Controls.Clear();

            Label lblTitle = new Label
            {
                Text = "پرکاربردها:",
                AutoSize = true,
                Margin = new Padding(3, 10, 3, 10),
                Font = new Font("Segoe UI", 9)
            };
            favoriteEmojisPanel.Controls.Add(lblTitle);

            foreach (var emoji in favoriteEmojis)
            {
                Button btnEmoji = new Button
                {
                    Text = emoji,
                    Size = new Size(35, 35),
                    Margin = new Padding(2),
                    Font = new Font("Segoe UI", 12),
                    FlatStyle = FlatStyle.Flat,
                    UseVisualStyleBackColor = true
                };

                btnEmoji.Click += (sender, e) => EmojiSelected?.Invoke(emoji);
                favoriteEmojisPanel.Controls.Add(btnEmoji);
            }
        }

        private void TxtSearch_TextChanged(object sender, EventArgs e)
        {
            string searchText = txtSearch.Text.Trim().ToLower();
            
            if (string.IsNullOrEmpty(searchText) || searchText == "جستجوی اموجی...")
            {
                tabEmojiCategories.Visible = true;
                return;
            }

            TabPage searchResultTab = null;
            foreach (TabPage tab in tabEmojiCategories.TabPages)
            {
                if (tab.Text == "نتایج جستجو")
                {
                    searchResultTab = tab;
                    searchResultTab.Controls.Clear();
                    break;
                }
            }

            if (searchResultTab == null)
            {
                searchResultTab = new TabPage("نتایج جستجو");
                tabEmojiCategories.TabPages.Add(searchResultTab);
            }

            FlowLayoutPanel flowPanel = new FlowLayoutPanel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                FlowDirection = FlowDirection.RightToLeft
            };

            var searchResults = new List<string>();
            foreach (var category in emojiCategories)
            {
                foreach (var emoji in category.Value)
                {
                    if (emoji.Contains(searchText))
                    {
                        searchResults.Add(emoji);
                    }
                }
            }

            foreach (var emoji in searchResults)
            {
                Button btnEmoji = CreateEmojiButton(emoji);
                flowPanel.Controls.Add(btnEmoji);
            }

            searchResultTab.Controls.Add(flowPanel);
            tabEmojiCategories.SelectedTab = searchResultTab;
        }

        protected override void OnDeactivate(EventArgs e)
        {
            base.OnDeactivate(e);
            this.Hide();
        }
    }
}


=================================================================================

using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace EmojiSelectorApp
{
    public class EmojiPopupForm : Form
    {
        private TextBox txtSearch;
        private TabControl tabEmojiCategories;
        private FlowLayoutPanel favoriteEmojisPanel;
        private List<string> favoriteEmojis;
        private Dictionary<string, List<string>> emojiCategories;
        private MainForm parentForm;

        public event Action<string> EmojiSelected;
        public event Action<List<string>> FavoriteEmojisChanged;

        public EmojiPopupForm(MainForm parent)
        {
            parentForm = parent;
            InitializePopup();
            InitializeEmojiCategories();
            LoadFavoriteEmojis();
            SetupControls();
        }

        private void InitializePopup()
        {
            this.FormBorderStyle = FormBorderStyle.None;
            this.Size = new Size(400, 500);
            this.ShowInTaskbar = false;
            this.TopMost = true;
            this.StartPosition = FormStartPosition.Manual;
            this.RightToLeft = RightToLeft.Yes;
            this.BackColor = Color.White;
            this.Paint += (s, e) => 
            {
                e.Graphics.DrawRectangle(new Pen(Color.LightGray), 0, 0, Width - 1, Height - 1);
            };
        }

        private void LoadFavoriteEmojis()
        {
            favoriteEmojis = parentForm.favoriteEmojis;
        }

        private void InitializeEmojiCategories()
        {
            emojiCategories = new Dictionary<string, List<string>>();
            
            // دسته احساسات و صورت‌ها
            emojiCategories["احساسات"] = new List<string>()
            {
                "😀", "😁", "😂", "🤣", "😃", "😄", "😅", "😆",
                "😉", "😊", "😋", "😎", "😍", "😘", "🥰", "😗",
                "😙", "😚", "🙂", "🤗", "🤩", "🤔", "🤨", "😐",
                "😑", "😶", "🙄", "😏", "😣", "😥", "😮", "🤐",
                "😯", "😪", "😫", "🥱", "😴", "😌", "😛", "😜",
                "😝", "🤤", "😒", "😓", "😔", "😕", "🙃", "🤑",
                "😲", "☹️", "🙁", "😖", "😞", "😟", "😤", "😢",
                "😭", "😦", "😧", "😨", "😩", "🤯", "😬", "😰"
            };
            
            // دسته حیوانات
            emojiCategories["حیوانات"] = new List<string>()
            {
                "🐶", "🐱", "🐭", "🐹", "🐰", "🦊", "🐻", "🐼",
                "🐨", "🐯", "🦁", "🐮", "🐷", "🐸", "🐵", "🐔",
                "🐧", "🐦", "🐤", "🦆", "🦅", "🦉", "🦇", "🐺",
                "🐗", "🐴", "🦄", "🐝", "🐛", "🦋", "🐌", "🐞",
                "🐜", "🦟", "🦗", "🕷️", "🦂", "🐢", "🐍", "🦎",
                "🦖", "🦕", "🐙", "🦑", "🦐", "🦞", "🦀", "🐡",
                "🐠", "🐟", "🐬", "🐳", "🐋", "🦈", "🐊", "🐅"
            };
            
            // دسته غذاها
            emojiCategories["غذاها"] = new List<string>()
            {
                "🍏", "🍎", "🍐", "🍊", "🍋", "🍌", "🍉", "🍇",
                "🍓", "🍈", "🍒", "🍑", "🥭", "🍍", "🥥", "🥝",
                "🍅", "🍆", "🥑", "🥦", "🥬", "🥒", "🌶️", "🌽",
                "🥕", "🧄", "🧅", "🥔", "🍠", "🥐", "🥯", "🍞",
                "🥖", "🥨", "🧀", "🥚", "🍳", "🧈", "🥞", "🧇",
                "🥓", "🥩", "🍗", "🍖", "🌭", "🍔", "🍟", "🍕",
                "🥪", "🥙", "🧆", "🌮", "🌯", "🥗", "🥘", "🥫"
            };
            
            // دسته علائم و نمادها
            emojiCategories["نمادها"] = new List<string>()
            {
                "❤️", "🧡", "💛", "💚", "💙", "💜", "🖤", "🤍",
                "🤎", "💔", "❣️", "💕", "💞", "💓", "💗", "💖",
                "💘", "💝", "💟", "☮️", "✝️", "☪️", "🕉️", "☸️",
                "✡️", "🔯", "🕎", "☯️", "☦️", "🛐", "⛎", "♈",
                "♉", "♊", "♋", "♌", "♍", "♎", "♏", "♐",
                "♑", "♒", "♓", "🆔", "⚛️", "🉑", "☢️", "☣️",
                "📴", "📳", "🈶", "🈚", "🈸", "🈺", "🈷️", "✴️"
            };
            
            // دسته اشیاء
            emojiCategories["اشیاء"] = new List<string>()
            {
                "⌚", "📱", "💻", "⌨️", "🖥️", "🖨️", "🖱️", "🖲️",
                "💽", "💾", "💿", "📀", "📼", "📷", "📸", "📹",
                "🎥", "📽️", "🎞️", "📞", "☎️", "📟", "📠", "📺",
                "📻", "🎙️", "🎚️", "🎛️", "🧭", "⏱️", "⏲️", "⏰",
                "🕰️", "⌛", "⏳", "📡", "🔋", "🔌", "💡", "🔦",
                "🕯️", "🧯", "🛢️", "💸", "💵", "💴", "💶", "💷",
                "💰", "💳", "💎", "⚖️", "🧰", "🔧", "🔨", "⚒️"
            };
        }

        private void SetupControls()
        {
            // Search TextBox
            txtSearch = new TextBox
            {
                Location = new Point(10, 10),
                Size = new Size(380, 25),
                Font = new Font("Segoe UI", 10),
                PlaceholderText = "جستجوی اموجی..."
            };
            txtSearch.TextChanged += TxtSearch_TextChanged;
            this.Controls.Add(txtSearch);

            // Favorites Panel
            favoriteEmojisPanel = new FlowLayoutPanel
            {
                Location = new Point(10, 45),
                Size = new Size(380, 50),
                BorderStyle = BorderStyle.FixedSingle,
                FlowDirection = FlowDirection.RightToLeft
            };
            this.Controls.Add(favoriteEmojisPanel);
            UpdateFavoriteEmojisPanel();

            // Tab Control
            tabEmojiCategories = new TabControl
            {
                Location = new Point(10, 105),
                Size = new Size(380, 385),
                Font = new Font("Segoe UI", 9)
            };
            this.Controls.Add(tabEmojiCategories);

            // Create tabs for each category
            foreach (var category in emojiCategories)
            {
                TabPage tabPage = new TabPage(category.Key);
                tabPage.RightToLeft = RightToLeft.Yes;

                FlowLayoutPanel flowPanel = new FlowLayoutPanel
                {
                    Dock = DockStyle.Fill,
                    AutoScroll = true,
                    FlowDirection = FlowDirection.RightToLeft
                };

                foreach (var emoji in category.Value)
                {
                    Button btnEmoji = CreateEmojiButton(emoji);
                    flowPanel.Controls.Add(btnEmoji);
                }

                tabPage.Controls.Add(flowPanel);
                tabEmojiCategories.TabPages.Add(tabPage);
            }

            // Add close button
            Button btnClose = new Button
            {
                Text = "×",
                Size = new Size(25, 25),
                Location = new Point(365, 5),
                FlatStyle = FlatStyle.Flat,
                Font = new Font("Segoe UI", 12, FontStyle.Bold)
            };
            btnClose.Click += (s, e) => this.Hide();
            this.Controls.Add(btnClose);
        }

        private Button CreateEmojiButton(string emoji)
        {
            Button btnEmoji = new Button
            {
                Text = emoji,
                Size = new Size(40, 40),
                Margin = new Padding(3),
                Font = new Font("Segoe UI", 12),
                FlatStyle = FlatStyle.Flat,
                UseVisualStyleBackColor = true
            };

            ContextMenuStrip contextMenu = new ContextMenuStrip();
            ToolStripMenuItem addToFavoritesItem = new ToolStripMenuItem("افزودن به پرکاربردها");
            addToFavoritesItem.Click += (sender, e) => AddToFavorites(emoji);
            contextMenu.Items.Add(addToFavoritesItem);

            if (favoriteEmojis.Contains(emoji))
            {
                ToolStripMenuItem removeFromFavoritesItem = new ToolStripMenuItem("حذف از پرکاربردها");
                removeFromFavoritesItem.Click += (sender, e) => RemoveFromFavorites(emoji);
                contextMenu.Items.Add(removeFromFavoritesItem);
            }

            btnEmoji.ContextMenuStrip = contextMenu;
            btnEmoji.Click += (sender, e) => EmojiSelected?.Invoke(emoji);

            return btnEmoji;
        }

        private void AddToFavorites(string emoji)
        {
            if (!favoriteEmojis.Contains(emoji))
            {
                favoriteEmojis.Add(emoji);
                if (favoriteEmojis.Count > 20)
                    favoriteEmojis.RemoveAt(0);
                UpdateFavoriteEmojisPanel();
                FavoriteEmojisChanged?.Invoke(favoriteEmojis);
            }
        }

        private void RemoveFromFavorites(string emoji)
        {
            if (favoriteEmojis.Contains(emoji))
            {
                favoriteEmojis.Remove(emoji);
                UpdateFavoriteEmojisPanel();
                FavoriteEmojisChanged?.Invoke(favoriteEmojis);
            }
        }

        private void UpdateFavoriteEmojisPanel()
        {
            favoriteEmojisPanel.Controls.Clear();

            Label lblTitle = new Label
            {
                Text = "پرکاربردها:",
                AutoSize = true,
                Margin = new Padding(3, 10, 3, 10),
                Font = new Font("Segoe UI", 9)
            };
            favoriteEmojisPanel.Controls.Add(lblTitle);

            foreach (var emoji in favoriteEmojis)
            {
                Button btnEmoji = new Button
                {
                    Text = emoji,
                    Size = new Size(35, 35),
                    Margin = new Padding(2),
                    Font = new Font("Segoe UI", 12),
                    FlatStyle = FlatStyle.Flat,
                    UseVisualStyleBackColor = true
                };

                btnEmoji.Click += (sender, e) => EmojiSelected?.Invoke(emoji);
                favoriteEmojisPanel.Controls.Add(btnEmoji);
            }
        }

        private void TxtSearch_TextChanged(object sender, EventArgs e)
        {
            string searchText = txtSearch.Text.Trim().ToLower();
            
            if (string.IsNullOrEmpty(searchText) || searchText == "جستجوی اموجی...")
            {
                tabEmojiCategories.Visible = true;
                return;
            }

            TabPage searchResultTab = null;
            foreach (TabPage tab in tabEmojiCategories.TabPages)
            {
                if (tab.Text == "نتایج جستجو")
                {
                    searchResultTab = tab;
                    searchResultTab.Controls.Clear();
                    break;
                }
            }

            if (searchResultTab == null)
            {
                searchResultTab = new TabPage("نتایج جستجو");
                tabEmojiCategories.TabPages.Add(searchResultTab);
            }

            FlowLayoutPanel flowPanel = new FlowLayoutPanel
            {
                Dock = DockStyle.Fill,
                AutoScroll = true,
                FlowDirection = FlowDirection.RightToLeft
            };

            var searchResults = new List<string>();
            foreach (var category in emojiCategories)
            {
                foreach (var emoji in category.Value)
                {
                    if (emoji.Contains(searchText))
                    {
                        searchResults.Add(emoji);
                    }
                }
            }

            foreach (var emoji in searchResults)
            {
                Button btnEmoji = CreateEmojiButton(emoji);
                flowPanel.Controls.Add(btnEmoji);
            }

            searchResultTab.Controls.Add(flowPanel);
            tabEmojiCategories.SelectedTab = searchResultTab;
        }

        protected override void OnDeactivate(EventArgs e)
        {
            base.OnDeactivate(e);
            this.Hide();
        }
    }
} 
