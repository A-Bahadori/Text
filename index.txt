using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace EmojiTextBoxDemo
{
    public partial class Form1 : Form
    {
        private TextBox textBox1;
        private ListBox listBox1;

        // لیست ایموجی‌ها
        private List<string> emojis = new List<string>
        {
            "😀", "😂", "😍", "👍", "🙏", "🎉", "💡", "🔥", "🎂", "🚀",
            "😉", "😎", "😢", "😡", "🤔", "🥳", "😴", "😇", "🤩", "🤖"
        };

        public Form1()
        {
            InitializeComponent();
        }

        private void InitializeComponent()
        {
            // ایجاد کنترل‌ها
            this.textBox1 = new TextBox();
            this.listBox1 = new ListBox();

            // 
            // textBox1
            // 
            this.textBox1.Font = new Font("Segoe UI", 12F, FontStyle.Regular, GraphicsUnit.Point);
            this.textBox1.Location = new Point(12, 12);
            this.textBox1.Width = 400;
            this.textBox1.KeyUp += textBox1_KeyUp;
            // 
            // listBox1
            // 
            this.listBox1.Font = new Font("Segoe UI", 12F, FontStyle.Regular, GraphicsUnit.Point);
            this.listBox1.Visible = false;
            this.listBox1.Height = 150;
            this.listBox1.Click += listBox1_Click;
            this.listBox1.KeyDown += listBox1_KeyDown;

            // 
            // Form1
            // 
            this.ClientSize = new Size(430, 200);
            this.Controls.Add(this.textBox1);
            this.Controls.Add(this.listBox1);
            this.Text = "Emoji Picker Demo";
        }

        // هنگام آزاد شدن کلید در TextBox
        private void textBox1_KeyUp(object sender, KeyEventArgs e)
        {
            string word = GetCurrentWord(textBox1);
            if (word.StartsWith(":"))
            {
                string query = word.Substring(1).ToLower();
                var matches = emojis
                    .Where(emo => GetEmojiName(emo).Contains(query) || emo.Contains(query))
                    .ToList();

                if (matches.Any())
                {
                    listBox1.DataSource = matches;
                    PositionListBox();
                    listBox1.Visible = true;
                }
                else
                {
                    listBox1.Visible = false;
                }
            }
            else
            {
                listBox1.Visible = false;
            }
        }

        // گرفتن کلمه جاری (از آخرین فاصله تا مکان‌نما)
        private string GetCurrentWord(TextBox tb)
        {
            int pos = tb.SelectionStart;
            string textUpToCursor = tb.Text.Substring(0, pos);
            int lastSpace = textUpToCursor.LastIndexOf(' ');
            return lastSpace >= 0
                ? textUpToCursor.Substring(lastSpace + 1)
                : textUpToCursor;
        }

        // موقعیت‌دهی ListBox زیر مکان‌نما
        private void PositionListBox()
        {
            int idx = textBox1.SelectionStart;
            Point p = textBox1.GetPositionFromCharIndex(idx);
            p.Y += (int)Math.Ceiling(textBox1.Font.GetHeight()) + 5;
            Point screen = textBox1.PointToScreen(p);
            Point client = this.PointToClient(screen);

            listBox1.Location = client;
            listBox1.Width = 150;
        }

        // کلیک روی آیتم لیست
        private void listBox1_Click(object sender, EventArgs e)
        {
            InsertSelectedEmoji();
        }

        // کلیدهای Enter و Escape در ListBox
        private void listBox1_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Enter)
            {
                InsertSelectedEmoji();
                e.Handled = true;
            }
            else if (e.KeyCode == Keys.Escape)
            {
                listBox1.Visible = false;
                e.Handled = true;
            }
        }

        // درج ایموجی انتخاب‌شده در TextBox
        private void InsertSelectedEmoji()
        {
            if (listBox1.SelectedItem == null) return;
            string emoji = listBox1.SelectedItem.ToString();

            int selStart = textBox1.SelectionStart;
            string word = GetCurrentWord(textBox1);
            int wordLen = word.Length;

            textBox1.Text = textBox1.Text
                .Remove(selStart - wordLen, wordLen)
                .Insert(selStart - wordLen, emoji);

            textBox1.SelectionStart = selStart - wordLen + emoji.Length;
            listBox1.Visible = false;
            textBox1.Focus();
        }

        // در صورت تمایل می‌توانید این تابع را برای نگاشت اسم به ایموجی بسط دهید
        private string GetEmojiName(string emoji)
        {
            // برای سادگی اینجا فقط همان کاراکتر ایموجی برگردانده می‌شود
            // می‌توانید یک دیکشنری از نام‌ها بسازید و اینجا استفاده کنید
            return emoji;
        }
    }
}
