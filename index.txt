using System;
using System.Reflection;
using System.CodeDom.Compiler;
using System.Diagnostics;
using Microsoft.CSharp;

// فرض کنید کد قبلی شما به صورت زیر است
CodeDomProvider provider = new CSharpCodeProvider();
CompilerParameters compileParams = new CompilerParameters();
compileParams.GenerateInMemory = false;
compileParams.OutputAssembly = "path/to/output.dll";
compileParams.IncludeDebugInformation = true;
string[] sources = { "your source code" };

// کامپایل کردن
CompilerResults compilerResults = provider.CompileAssemblyFromSource(compileParams, sources);

// بررسی خطاهای کامپایل
if (compilerResults.Errors.HasErrors)
{
    foreach (CompilerError error in compilerResults.Errors)
    {
        Console.WriteLine($"Error: {error.ErrorText} at Line {error.Line}, Column {error.Column}");
    }
    return;
}

// بارگذاری assembly برای اجرا
Assembly compiledAssembly;
if (compilerResults.CompiledAssembly != null)
{
    compiledAssembly = compilerResults.CompiledAssembly;
}
else
{
    compiledAssembly = Assembly.LoadFrom(compileParams.OutputAssembly);
}

try
{
    // نوع اصلی برنامه را پیدا کنید
    Type programType = compiledAssembly.GetType("YourNamespace.YourMainClass");
    
    // یک نمونه از کلاس بسازید (اگر متد استاتیک نیست)
    object instance = Activator.CreateInstance(programType);
    
    // متد مورد نظر را فراخوانی کنید
    MethodInfo method = programType.GetMethod("YourMethodName");
    method.Invoke(instance, null); // یا پارامترهای مورد نیاز را پاس دهید
}
catch (Exception ex)
{
    // دریافت exception اصلی (در صورت وجود InnerException)
    Exception innerException = ex;
    while (innerException is TargetInvocationException && innerException.InnerException != null)
    {
        innerException = innerException.InnerException;
    }
    
    // نمایش اطلاعات exception با جزئیات StackTrace که شامل اطلاعات خط و فایل از PDB است
    Console.WriteLine($"Runtime Exception: {innerException.GetType().Name}");
    Console.WriteLine($"Message: {innerException.Message}");
    
    // نمایش StackTrace با خط و شماره ستون (به دلیل وجود PDB)
    StackTrace stackTrace = new StackTrace(innerException, true);
    for (int i = 0; i < stackTrace.FrameCount; i++)
    {
        StackFrame frame = stackTrace.GetFrame(i);
        string fileName = frame.GetFileName() ?? "Unknown";
        int line = frame.GetFileLineNumber();
        int column = frame.GetFileColumnNumber();
        string methodName = frame.GetMethod()?.Name ?? "Unknown";
        
        Console.WriteLine($"  at {methodName} in {fileName}:line {line}, column {column}");
    }
}
