using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;

namespace EmojiTextBoxDemo
{
    public partial class Form1 : Form
    {
        private TextBox textBox1;
        private FlowLayoutPanel emojiPanel;

        // لیست ایموجی‌ها
        private List<string> emojis = new List<string>
        {
            "😀", "😂", "😍", "👍", "🙏", "🎉", "💡", "🔥", "🎂", "🚀",
            "😉", "😎", "😢", "😡", "🤔", "🥳", "😴", "😇", "🤩", "🤖"
        };

        public Form1()
        {
            InitializeComponent();
        }

        private void InitializeComponent()
        {
            this.textBox1 = new TextBox();
            this.emojiPanel = new FlowLayoutPanel();

            // 
            // textBox1
            // 
            this.textBox1.Font = new Font("Segoe UI", 12F, FontStyle.Regular, GraphicsUnit.Point);
            this.textBox1.Location = new Point(12, 12);
            this.textBox1.Width = 400;
            this.textBox1.KeyUp += textBox1_KeyUp;
            // 
            // emojiPanel
            // 
            this.emojiPanel.Visible = false;
            this.emojiPanel.AutoSize = true;
            this.emojiPanel.WrapContents = true;
            this.emojiPanel.FlowDirection = FlowDirection.LeftToRight;
            this.emojiPanel.BackColor = Color.White;
            this.emojiPanel.BorderStyle = BorderStyle.FixedSingle;
            this.emojiPanel.Padding = new Padding(4);
            // ثابت نگذارید، موقع نمایش موقعیتش را حساب می‌کنیم

            // 
            // Form1
            // 
            this.ClientSize = new Size(430, 250);
            this.Controls.Add(this.textBox1);
            this.Controls.Add(this.emojiPanel);
            this.Text = "Emoji Picker Demo";
            this.BackColor = Color.FromArgb(245, 245, 245);
        }

        private void textBox1_KeyUp(object sender, KeyEventArgs e)
        {
            string word = GetCurrentWord(textBox1);
            if (word.StartsWith(":"))
            {
                string query = word.Substring(1).ToLower();
                var matches = emojis
                    .Where(emo => emo.Contains(query) || GetEmojiName(emo).Contains(query))
                    .ToList();

                if (matches.Any())
                {
                    PopulateEmojiPanel(matches);
                    PositionEmojiPanel();
                    emojiPanel.Visible = true;
                }
                else
                {
                    emojiPanel.Visible = false;
                }
            }
            else if (e.KeyCode == Keys.Escape)
            {
                emojiPanel.Visible = false;
            }
            else
            {
                emojiPanel.Visible = false;
            }
        }

        private string GetCurrentWord(TextBox tb)
        {
            int pos = tb.SelectionStart;
            string upTo = tb.Text.Substring(0, pos);
            int idx = upTo.LastIndexOf(' ');
            return idx >= 0 ? upTo.Substring(idx + 1) : upTo;
        }

        private void PopulateEmojiPanel(List<string> list)
        {
            emojiPanel.Controls.Clear();
            foreach (var emo in list)
            {
                var btn = new Button
                {
                    Text = emo,
                    Font = new Font("Segoe UI Emoji", 16F),
                    Size = new Size(40, 40),
                    Margin = new Padding(4),
                    FlatStyle = FlatStyle.Flat,
                    BackColor = Color.White
                };
                btn.FlatAppearance.BorderSize = 0;
                btn.Cursor = Cursors.Hand;
                btn.Click += (s, e) =>
                {
                    InsertEmoji(emo);
                };
                emojiPanel.Controls.Add(btn);
            }
        }

        private void PositionEmojiPanel()
        {
            int idx = textBox1.SelectionStart;
            Point p = textBox1.GetPositionFromCharIndex(idx);
            p.Y += (int)Math.Ceiling(textBox1.Font.GetHeight()) + 5;
            Point screen = textBox1.PointToScreen(p);
            Point client = this.PointToClient(screen);

            // حداکثر عرض پنل را محدود می‌کنیم تا ردیف‌بندی خودکار انجام شود
            emojiPanel.MaximumSize = new Size(200, 0);
            emojiPanel.Location = client;
        }

        private void InsertEmoji(string emoji)
        {
            int sel = textBox1.SelectionStart;
            string word = GetCurrentWord(textBox1);
            int wlen = word.Length;

            textBox1.Text = textBox1.Text
                .Remove(sel - wlen, wlen)
                .Insert(sel - wlen, emoji);

            textBox1.SelectionStart = sel - wlen + emoji.Length;
            emojiPanel.Visible = false;
            textBox1.Focus();
        }

        private string GetEmojiName(string emoji)
        {
            // برای سادگی، همون ایموجی را برمی‌گردانیم.
            return emoji;
        }
    }
}
